# ADO Pipeline
name: Azure Springs Apps LZA Deployment

trigger: none

pool: 
  vmImage: 'ubuntu-latest'

variables:
  - name: adminServer
    value: admin-server
  - name: apiGateway
    value: api-gateway
  - name: customerService
    value: customers-service
  - name: vetsService
    value: vets-service
  - name: visitsService
    value: visits-service
  - name: apiGatewayJar
    value: "spring-petclinic-api-gateway/target/api-gateway-3.0.1.jar"
  - name: adminServerJar
    value: "spring-petclinic-admin-server/target/admin-server-3.0.1.jar"
  - name: customersServiceJar
    value: "spring-petclinic-customers-service/target/customers-service-3.0.1.jar"
  - name: vetsServiceJar
    value: "spring-petclinic-vets-service/target/vets-service-3.0.1.jar" 
  - name: visitsServiceJar
    value: "spring-petclinic-visits-service/target/visits-service-3.0.1.jar" 
  - name: deployFirewallStandard
    value: "false"
  - name: destroyStandard
    value: "true"
  - name: region
    value: "eastus"
  - name: environment
    value: "dev"
  - name: jumpBoxUsername
    value: "ltzadmin"
  - name: mySQLAdminUsername
    value: "mySqlAdmin"
  - name : azureServiceConnection
    value : 'scSub002'
  - group : lza-dev
  - name : workingDirectory
    value : "Scenarios/ASA-Secure-Baseline/Bicep"
  - name : deleteTemplateFile
    value: "empty.bicep"
  - name : createAgain
    value: "false"
  - name : spring_apps_rg  
    value :  'rg-springlza-APPS'
  - name : spring_apps_service_name
    value : 'spring-springlza-dev-2qn6'

resources:
  repositories:
  - repository: pet-clinic-microservices
    type: github
    endpoint: bry-devops
    name: bry-devops/spring-petclinic-microservices
    ref: refs/heads/azure

stages:
  - stage: provision_infrastructure
    displayName: "Provision Infrastructure"
    jobs:
      - job: provision_hub_network
        displayName: "Provision HUB Network"
        condition: eq(variables['createAgain'], 'true')
        steps:
          - checkout: self
          - task: AzureCLI@2
            displayName: "Provision Hub Network"
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az deployment sub create --name $(deploymentName) --location $(location) --template-file 02-Hub-Network-main.bicep --parameters $(paramFile) location=$(location) namePrefix=$(namePrefix) principalId=$(servicePrincipalId) tier=$(tier) jumpHostPassword=$(jumpHostPassword)
              workingDirectory: $(workingDirectory)
      - job: provision_spoke_network
        displayName: "Provision Spoke Network"
        dependsOn: [provision_hub_network]
        condition: eq(variables['createAgain'], 'true')
        steps:
          - checkout: self
          - task: AzureCLI@2
            displayName: "Provision Spoke Network"
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az deployment sub create --name $(deploymentName) --location $(location) --template-file 03-LZ-Network-main.bicep --parameters $(paramFile) location=$(location) namePrefix=$(namePrefix) principalId=$(servicePrincipalId) tier=$(tier) jumpHostPassword=$(jumpHostPassword)
              workingDirectory: $(workingDirectory)
      - job: provision_sharedresources
        displayName: "Provision Spoke Shared Resources"
        dependsOn: [provision_spoke_network]
        condition: eq(variables['createAgain'], 'true')
        steps:
          - checkout: self
          - task: AzureCLI@2
            displayName: "Provision Spoke SharedResources"
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az deployment sub create --name $(deploymentName) --location $(location) --template-file 04-LZ-SharedResources-main.bicep --parameters $(paramFile) location=$(location) namePrefix=$(namePrefix) principalId=$(servicePrincipalId) tier=$(tier) jumpHostPassword=$(jumpHostPassword)
              workingDirectory: $(workingDirectory) 
      - job: provision_hub_firewall
        displayName: "Provision HUB Firewall"
        dependsOn: [provision_hub_network, provision_sharedresources]
        condition: eq(variables['createAgain'], 'true')
        steps:
          - checkout: self
          - task: AzureCLI@2
            displayName: "Provision Hub AzureFirewall"
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az deployment sub create --name $(deploymentName) --location $(location) --template-file 05-Hub-AzureFirewall-main.bicep --parameters $(paramFile) location=$(location) namePrefix=$(namePrefix) principalId=$(servicePrincipalId) tier=$(tier) jumpHostPassword=$(jumpHostPassword)
              workingDirectory: $(workingDirectory)
      - job: provision_standard_sa
        displayName: "Provision Spoke SpringApps Standard"
        dependsOn: [provision_hub_network, provision_sharedresources, provision_hub_firewall]
        condition: eq(variables['createAgain'], 'true')
        steps:
          - checkout: self
          - task: AzureCLI@2
            displayName: "Provision LZ SpringApps Standard"
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az deployment sub create --name $(deploymentName) --location $(location) --template-file 06-LZ-SpringApps-Standard-main.bicep --parameters $(paramFile) location=$(location) namePrefix=$(namePrefix) principalId=$(servicePrincipalId) tier=$(tier) jumpHostPassword=$(jumpHostPassword)
              workingDirectory: $(workingDirectory)  

  - stage: deploy_spring_app
    displayName: "Deploy Petclinic Spring App"
    dependsOn:  provision_infrastructure
    condition: succeeded()
    jobs:
    - job: deploy_app
      steps:
      - task: AzureCLI@2
        displayName: Preview Bicep Changes
        inputs:
          azureSubscription: $(azureServiceConnection)
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az --version

  - stage: deprovision_infrastructure
    displayName: "Deprovision Infrastrcture"
    dependsOn: deploy_spring_app
    condition: succeeded()
    jobs:
    - job: destory_infra
      steps:
      - task: AzureCLI@2
        displayName: Preview Bicep Changes
        inputs:
          azureSubscription: $(azureServiceConnection)
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az --version


