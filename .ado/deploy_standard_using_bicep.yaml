# ADO Pipeline
name: Azure Springs Apps LZA Deployment

trigger: none

pool: 
  vmImage: 'ubuntu-latest'

variables:
  - name: adminServer
    value: admin-server
  - name: apiGateway
    value: api-gateway
  - name: customerService
    value: customers-service
  - name: vetsService
    value: vets-service
  - name: visitsService
    value: visits-service
  - name: apiGatewayJar
    value: "spring-petclinic-api-gateway/target/spring-petclinic-api-gateway-3.0.1.jar"
  - name: adminServerJar
    value: "spring-petclinic-admin-server/target/spring-petclinic-admin-server-3.0.1.jar"
  - name: customersServiceJar
    value: "spring-petclinic-customers-service/target/spring-petclinic-customers-service-3.0.1.jar"
  - name: vetsServiceJar
    value: "spring-petclinic-vets-service/target/spring-petclinic-vets-service-3.0.1.jar" 
  - name: visitsServiceJar
    value: "spring-petclinic-visits-service/target/spring-petclinic-visits-service-3.0.1.jar" 
  - name: deployFirewallStandard
    value: "false"
  - name: destroyStandard
    value: "false"
  - name: region
    value: "eastus"
  - name: environment
    value: "dev"
  - name: jumpBoxUsername
    value: "ltzadmin"
  - name: mySQLAdminUsername
    value: "mySqlAdmin"
  - name : azureServiceConnection
    value : 'scSub002'
  - group : lza-dev
  - name : workingDirectory
    value : "Scenarios/ASA-Secure-Baseline/Bicep"
  - name : deleteTemplateFile
    value: "empty.bicep"
  - name : createAgain
    value: "false"

resources:
  repositories:
  - repository: pet-clinic-microservices
    type: github
    endpoint: bry-devops
    name: bry-devops/spring-petclinic-microservices
    ref: main

jobs:
  - job: provision_hub_network
    displayName: "Provision HUB Network"
    condition: eq(variables['createAgain'], 'true')
    steps:
      - checkout: self

      - task: AzureCLI@2
        displayName: "Provision Various Resources"
        inputs:
          azureSubscription: $(azureServiceConnection)
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: 'az --version'
      - task: AzureCLI@2
        displayName: "Provision Hub Network"
        inputs:
          azureSubscription: $(azureServiceConnection)
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az deployment sub create --name $(deploymentName) --location $(location) --template-file 02-Hub-Network-main.bicep --parameters $(paramFile) location=$(location) namePrefix=$(namePrefix) principalId=$(servicePrincipalId) tier=$(tier) jumpHostPassword=$(jumpHostPassword)
          workingDirectory: $(workingDirectory)

  - job: provision_spoke_network
    displayName: "Provision Spoke Network"
    dependsOn: [provision_hub_network]
    condition: eq(variables['createAgain'], 'true')
    steps:
      - checkout: self

      - task: AzureCLI@2
        displayName: "Provision Spoke Network"
        inputs:
          azureSubscription: $(azureServiceConnection)
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az deployment sub create --name $(deploymentName) --location $(location) --template-file 03-LZ-Network-main.bicep --parameters $(paramFile) location=$(location) namePrefix=$(namePrefix) principalId=$(servicePrincipalId) tier=$(tier) jumpHostPassword=$(jumpHostPassword)
          workingDirectory: $(workingDirectory)

  - job: provision_sharedresources
    displayName: "Provision LZ Shared Resources"
    dependsOn: [provision_spoke_network]
    condition: eq(variables['createAgain'], 'true')
    steps:
      - checkout: self

      - task: AzureCLI@2
        displayName: "Provision LZ SharedResources"
        inputs:
          azureSubscription: $(azureServiceConnection)
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az deployment sub create --name $(deploymentName) --location $(location) --template-file 04-LZ-SharedResources-main.bicep --parameters $(paramFile) location=$(location) namePrefix=$(namePrefix) principalId=$(servicePrincipalId) tier=$(tier) jumpHostPassword=$(jumpHostPassword)
          workingDirectory: $(workingDirectory) 

  - job: provision_hub_firewall
    displayName: "Provision HUB Firewall"
    dependsOn: [provision_hub_network, provision_sharedresources]
    condition: eq(variables['createAgain'], 'true')
    steps:
      - checkout: self

      - task: AzureCLI@2
        displayName: "Provision Hub AzureFirewall"
        inputs:
          azureSubscription: $(azureServiceConnection)
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az deployment sub create --name $(deploymentName) --location $(location) --template-file 05-Hub-AzureFirewall-main.bicep --parameters $(paramFile) location=$(location) namePrefix=$(namePrefix) principalId=$(servicePrincipalId) tier=$(tier) jumpHostPassword=$(jumpHostPassword)
          workingDirectory: $(workingDirectory)

  - job: provision_standard_sa
    displayName: "Provision LZ SpringApps Standard"
    dependsOn: [provision_hub_network, provision_sharedresources, provision_hub_firewall]
    condition: eq(variables['createAgain'], 'true')
    steps:
      - checkout: self

      - task: AzureCLI@2
        displayName: "Provision LZ SpringApps Standard"
        inputs:
          azureSubscription: $(azureServiceConnection)
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az deployment sub create --name $(deploymentName) --location $(location) --template-file 06-LZ-SpringApps-Standard-main.bicep --parameters $(paramFile) location=$(location) namePrefix=$(namePrefix) principalId=$(servicePrincipalId) tier=$(tier) jumpHostPassword=$(jumpHostPassword)
          workingDirectory: $(workingDirectory)  

  - job: deploy_pet_clinic_infra
    displayName: "Deploy Pet Clinic Infrastructure"
    dependsOn: [provision_spoke_network, provision_sharedresources, provision_standard_sa]
    steps:
      - checkout: self

      - task: AzureCLI@2
        displayName: "Deploy Pet Clinic Infrastructure"
        inputs:
          azureSubscription: $(azureServiceConnection)
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          spring_apps_rg  : rg-$(namePrefix)-APPS
          spring_apps_service_name : spring-springlza-dev-2qn6
          inlineScript: |
            echo 'Creating Spring App for $(apiGateway)'
            az spring app create -n $(apiGateway) -g $(spring_apps_rg) -s $(spring_apps_service_name) --runtime-version Java_17 --instance-count 1 --memory 2Gi --system-assigned true --assign-public-endpoint
            echo 'Creating Spring App for $(customerService)'
            az spring app create -n $(customerService) -g $(spring_apps_rg) -s $(spring_apps_service_name) --runtime-version Java_17 --instance-count 1 --memory 2Gi --system-assigned true --assign-public-endpoint
          workingDirectory: $(workingDirectory)

 
  - job: build_and_deploy_pet_clinic_ms
    displayName: Build and Deploy Pet Clinic Microservices
    dependsOn: [deploy_pet_clinic_infra, provision_standard_sa ]
    pool: 
      vmImage: 'ubuntu-latest'
    variables:
      - name: spring_apps_service_name 
        value: spring-springlza-dev-2qn6
      - name: spring_apps_rg 
        value: rg-$(namePrefix)-APPS
    steps:
      - checkout: pet-clinic-microservices
        path: pet-clinic
      - task: Maven@4
        inputs:
          mavenPomFile: 'pom.xml'
          mavenOptions: '-Xmx3072m'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.17'
          jdkArchitectureOption: 'x64'
          mavenVersionOption: Default
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
          goals: 'package'
      
      - bash: mvn clean package -DskipTests
      - task: AzureCLI@2
        displayName: Install Azure CLI Spring Extension
        inputs:
          azureSubscription: $(azureServiceConnection)
          scriptLocation: inlineScript
          scriptType: bash
          inlineScript: |
            set -eu
            az extension add --name spring -y
            az spring list -o table
          addSpnToEnvironment: true 
      - task: AzureCLI@2
        displayName: Deploy api-gateway
        inputs:
          azureSubscription: $(azureServiceConnection)
          scriptLocation: inlineScript
          scriptType: bash
          inlineScript: |
            az spring app deploy \
              --resource-group $(spring_apps_rg) \
              --service $(spring_apps_service_name) \
              --name $(apiGateway) \
              --artifact-path $(apiGatewayJar) \
              --jvm-options='-Xms2048m -Xmx2048m' \
              --env SPRING_PROFILES_ACTIVE=passwordless
          addSpnToEnvironment: true 
#      - task: AzureCLI@2
#        displayName: Deploy admin-server
#        inputs:
#          azureSubscription: $(azureServiceConnection)
#          scriptLocation: inlineScript
#          scriptType: bash
#          inlineScript: |
#            az spring app deploy \
#              --resource-group $(spring_apps_rg) \
#              --service $(spring_apps_service_name) \
#              --name $(adminServer) \
#              --artifact-path $(adminServerJar) \
#              --jvm-options='-Xms2048m -Xmx2048m' \
#              --env SPRING_PROFILES_ACTIVE=passwordless
#          addSpnToEnvironment: true 
      - task: AzureCLI@2
        displayName:  Deploy customers-service
        inputs:
          azureSubscription: $(azureServiceConnection)
          scriptLocation: inlineScript
          scriptType: bash
          inlineScript: |
            az spring app deploy \
              --resource-group $(spring_apps_rg) \
              --service $(spring_apps_service_name) \
              --name $(customerService) \
              --artifact-path $(customersServiceJar) \
              --jvm-options='-Xms2048m -Xmx2048m' \
              --env SPRING_PROFILES_ACTIVE=passwordless
          addSpnToEnvironment: true 
#      - task: AzureCLI@2
#        displayName:  Deploy vets-service
#        inputs:
#          azureSubscription: $(azureServiceConnection)
#          scriptLocation: inlineScript
#          scriptType: bash
#          inlineScript: |
#            az spring app deploy \
#              --resource-group $(spring_apps_rg) \
#              --service $(spring_apps_service_name) \
#              --name $(vetsService) \
#              --artifact-path $(vetsServiceJar) \
#              --jvm-options='-Xms2048m -Xmx2048m' \
#              --env SPRING_PROFILES_ACTIVE=passwordless
#          addSpnToEnvironment: true 
#      - task: AzureCLI@2
#        displayName:  Deploy visits-service
#        inputs:
#          azureSubscription: $(azureServiceConnection)
#          scriptLocation: inlineScript
#          scriptType: bash
#          inlineScript: |
#            az spring app deploy \
#              --resource-group $(spring_apps_rg) \
#              --service $(spring_apps_service_name) \
#              --name $(visitsService) \
#              --artifact-path $(visitsServiceJar) \
#              --jvm-options='-Xms2048m -Xmx2048m' \
#              --env SPRING_PROFILES_ACTIVE=passwordless
#          addSpnToEnvironment: true 


  - job: destroy_pet_clinic_infra
    displayName: Destroy Pet Clinic Infrastructure
    dependsOn: [provision_spoke_network, provision_sharedresources, provision_standard_sa, deploy_pet_clinic_infra, build_and_deploy_pet_clinic_ms]
    condition: eq(variables['destroyStandard'], 'true')
    steps:
    - task: AzureCLI@2
      displayName: "Destroy Pet Clinic Infrastructure"
      inputs:
        azureSubscription: 'scSub002'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo 'This job is not implemented'
        workingDirectory: $(workingDirectory)

  - job: destroy_spring_apps_standard
    displayName: Destroy 06 LZ Spring Apps Standard
    dependsOn: [destroy_pet_clinic_infra,  provision_standard_sa]
    condition: eq(variables['destroyStandard'], 'true')
    steps:
    - task: AzureCLI@2
      displayName: "Destroy 06 LZ Spring Apps Standard"
      inputs:
        azureSubscription: 'scSub002'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          resourceGroup=rg-$(namePrefix)-APPS
          echo Deleting Resource Group: $resourceGroup
          echo executing az deployment group create --template-file $(deleteTemplateFile) --resource-group $resourceGroup --mode complete
          az deployment group create --template-file $(deleteTemplateFile) --resource-group $resourceGroup --mode complete
          az group delete --name $resourceGroup -y
        workingDirectory: $(workingDirectory)

  - job: destroy_hub_firewall
    displayName: Destroy 05 Hub Firewall
    dependsOn: [destroy_spring_apps_standard]
    condition: eq(variables['destroyStandard'], 'true')
    steps:
    - task: AzureCLI@2
      displayName: "Destroy 05 Hub Firewall"
      inputs:
        azureSubscription: 'scSub002'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          resourceGroup=rg-$(namePrefix)-HUB
          echo Deleting Resource Group: $resourceGroup
          echo executing az deployment group create --template-file $(deleteTemplateFile) --resource-group $resourceGroup --mode complete
          az deployment group create --template-file $(deleteTemplateFile) --resource-group $resourceGroup --mode complete
          az group delete --name $resourceGroup -y
        workingDirectory: $(workingDirectory)
  
  - job: destroy_shared_resources
    displayName: Destroy 04 LZ Shared Resources
    dependsOn: [destroy_hub_firewall]
    condition: eq(variables['destroyStandard'], 'true')
    steps:
    - task: AzureCLI@2
      displayName: "Destroy 04 LZ Shared Resources"
      inputs:
        azureSubscription: 'scSub002'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          resourceGroup=rg-$(namePrefix)-SHARED
          echo Deleting Resource Group: $resourceGroup
          echo executing az deployment group create --template-file $(deleteTemplateFile) --resource-group $resourceGroup --mode complete
          az deployment group create --template-file $(deleteTemplateFile) --resource-group $resourceGroup --mode complete
          az group delete --name $resourceGroup -y
        workingDirectory: $(workingDirectory)    

  - job: destroy_spoke_network
    displayName: Destroy 03 LZ Network
    dependsOn: [destroy_shared_resources]
    condition: eq(variables['destroyStandard'], 'true')
    steps:
    - task: AzureCLI@2
      displayName: "Destroy 03 LZ Network"
      inputs:
        azureSubscription: 'scSub002'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          resourceGroup=rg-$(namePrefix)-SPOKE
          echo Deleting Resource Group: $resourceGroup
          echo executing az deployment group create --template-file $(deleteTemplateFile) --resource-group $resourceGroup --mode complete
          az deployment group create --template-file $(deleteTemplateFile) --resource-group $resourceGroup --mode complete
          az group delete --name $resourceGroup -y
        workingDirectory: $(workingDirectory)

  - job: destroy_hub_network
    displayName: Destroy 02 Hub Network
    dependsOn: [destroy_spoke_network]
    condition: eq(variables['destroyStandard'], 'true')
    steps:
    - task: AzureCLI@2
      displayName: "Destroy 02 Hub Network"
      inputs:
        azureSubscription: 'scSub002'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          resourceGroup=rg-$(namePrefix)-HUB
          echo Deleting Resource Group: $resourceGroup
          echo executing az deployment group create --template-file $(deleteTemplateFile) --resource-group $resourceGroup --mode complete
          az deployment group create --template-file $(deleteTemplateFile) --resource-group $resourceGroup --mode complete
          az group delete --name $resourceGroup -y
        workingDirectory: $(workingDirectory)