# ADO Pipeline
name: Azure Springs Apps LZA Deployment

trigger: none

pool: 
  vmImage: 'ubuntu-latest'

variables:
  - name: adminServer
    value: admin-server
  - name: apiGateway
    value: api-gateway
  - name: customerService
    value: customers-service
  - name: vetsService
    value: vets-service
  - name: visitsService
    value: visits-service
  - name: apiGatewayJar
    value: "spring-petclinic-api-gateway/target/spring-petclinic-api-gateway-3.0.1.jar"
  - name: adminServerJar
    value: "spring-petclinic-admin-server/target/spring-petclinic-admin-server-3.0.1.jar"
  - name: customersServiceJar
    value: "spring-petclinic-customers-service/target/spring-petclinic-customers-service-3.0.1.jar"
  - name: vetsServiceJar
    value: "spring-petclinic-vets-service/target/spring-petclinic-vets-service-3.0.1.jar" 
  - name: visitsServiceJar
    value: "spring-petclinic-visits-service/target/spring-petclinic-visits-service-3.0.1.jar" 
  - name: deployFirewallStandard
    value: "false"
  - name: destroyStandard
    value: "false"
  - name: region
    value: "eastus"
  - name: environment
    value: "dev"
  - name: jumpBoxUsername
    value: "ltzadmin"
  - name: mySQLAdminUsername
    value: "mySqlAdmin"
  - name : azureServiceConnection
    value : 'scSub002'
  - group : lza-dev
  - name : workingDirectory
    value : "Scenarios/ASA-Secure-Baseline/Bicep"
  - name : deleteTemplateFile
    value: "empty.bicep"

#resources:
#  repositories:
#  - repository: pet-clinic-microservices # The name used to reference this repository in the checkout step
#    type: github
#    endpoint: bry-devops
#    name: github.com/bry-devops/spring-petclinic-microservices
#    ref: main
jobs:
  - job: deploy_hub_network
    displayName: Deploy 02 Hub Network
#    variables: 
#      - name: workingDirectory
#        value:  "Scenarios/ASA-Secure-Baseline/Terraform/02-Hub-Network"
#    pool: 
#      vmImage: 'ubuntu-latest'

    steps:
      - checkout: self

      - task: AzureCLI@2
        displayName: "Provision Various Resources"
        inputs:
          azureSubscription: $(azureServiceConnection)
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: 'az --version'
      - task: AzureCLI@2
        displayName: "Provision Hub Network"
        inputs:
          azureSubscription: $(azureServiceConnection)
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az deployment sub create --name $(deploymentName) --location $(location) --template-file 02-Hub-Network-main.bicep --parameters $(paramFile) location=$(location) namePrefix=$(namePrefix) principalId=$(servicePrincipalId) tier=$(tier) jumpHostPassword=$(jumpHostPassword)
          workingDirectory: 'Scenarios/ASA-Secure-Baseline/Bicep'
#      - task: AzureCLI@2
#        displayName: "Provision LZ Network"
#        inputs:
#          azureSubscription: $(azureServiceConnection)
#          scriptType: 'bash'
#          scriptLocation: 'inlineScript'
#          inlineScript: |
#            az deployment sub create --name $(deploymentName) --location $(location) --template-file 03-LZ-Network-main.bicep --parameters $(paramFile) location=$(location) namePrefix=$(namePrefix) principalId=$(servicePrincipalId) tier=$(tier) jumpHostPassword=$(jumpHostPassword)
#          workingDirectory: 'Scenarios/ASA-Secure-Baseline/Bicep'
#      - task: AzureCLI@2
#        displayName: "Provision LZ SharedResources"
#        inputs:
#          azureSubscription: $(azureServiceConnection)
#          scriptType: 'bash'
#          scriptLocation: 'inlineScript'
#          inlineScript: |
#            az deployment sub create --name $(deploymentName) --location $(location) --template-file 04-LZ-SharedResources.bicep --parameters $(paramFile) location=$(location) namePrefix=$(namePrefix) principalId=$(servicePrincipalId) tier=$(tier) jumpHostPassword=$(jumpHostPassword)
#          workingDirectory: 'Scenarios/ASA-Secure-Baseline/Bicep' 

#      - task: AzureCLI@2
#        displayName: "Provision Hub AzureFirewall"
#        inputs:
#          azureSubscription: $(azureServiceConnection)
#          scriptType: 'bash'
#          scriptLocation: 'inlineScript'
#          inlineScript: |
#            az deployment sub create --name $(deploymentName) --location $(location) --template-file 05-Hub-AzureFirewall.bicep --parameters $(paramFile) location=$(location) namePrefix=$(namePrefix) principalId=$(servicePrincipalId) tier=$(tier) jumpHostPassword=$(jumpHostPassword)
#          workingDirectory: 'Scenarios/ASA-Secure-Baseline/Bicep'
#      - task: AzureCLI@2
#        displayName: "Provision LZ SpringApps Enterprise"
#        inputs:
#          azureSubscription: $(azureServiceConnection)
#          scriptType: 'bash'
#          scriptLocation: 'inlineScript'
#          inlineScript: |
#            az deployment sub create --name $(deploymentName) --location $(location) --template-file 06-LZ-SpringApps-Enterprise.bicep --parameters $(paramFile) location=$(location) namePrefix=$(namePrefix) principalId=$(servicePrincipalId) tier=$(tier) jumpHostPassword=$(jumpHostPassword)
#          workingDirectory: 'Scenarios/ASA-Secure-Baseline/Bicep'  
#      - task: AzureCLI@2
#        displayName: "Provision LZ SpringApps Standard"
#        inputs:
#          azureSubscription: $(azureServiceConnection)
#          scriptType: 'bash'
#          scriptLocation: 'inlineScript'
#          inlineScript: |
#            az deployment sub create --name $(deploymentName) --location $(location) --template-file 06-LZ-SpringApps-Standard.bicep --parameters $(paramFile) location=$(location) namePrefix=$(namePrefix) principalId=$(servicePrincipalId) tier=$(tier) jumpHostPassword=$(jumpHostPassword)
#          workingDirectory: 'Scenarios/ASA-Secure-Baseline/Bicep'  
#                                          
  - job: Deprovision_RG_HUB
    dependsOn: []
    condition: succeededOrFailed()
    steps:
    - task: AzureCLI@2
      displayName: "Deprovision Resource Group HUB"
      inputs:
        azureSubscription: 'scSub002'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          resourceGroup=rg-$(namePrefix)-HUB
          echo Deleting Resource Group: $resourceGroup
          echo executing az deployment group create --template-file $(deleteTemplateFile) --resource-group $resourceGroup --mode complete
          az deployment group create --template-file $(deleteTemplateFile) --resource-group $resourceGroup --mode complete
          az group delete --name $resourceGroup -y
        workingDirectory: $(workingDirectory)