# ADO Pipeline
name: Azure Springs Apps LZA Deployment

trigger: none

pool:
  vmImage: "ubuntu-latest"

variables:
  - name: adminServer
    value: admin-server
  - name: apiGateway
    value: api-gateway
  - name: customerService
    value: customers-service
  - name: vetsService
    value: vets-service
  - name: visitsService
    value: visits-service
  - name: apiGatewayJar
    value: "spring-petclinic-api-gateway/target/api-gateway-3.0.1.jar"
  - name: adminServerJar
    value: "spring-petclinic-admin-server/target/admin-server-3.0.1.jar"
  - name: customersServiceJar
    value: "spring-petclinic-customers-service/target/customers-service-3.0.1.jar"
  - name: vetsServiceJar
    value: "spring-petclinic-vets-service/target/vets-service-3.0.1.jar"
  - name: visitsServiceJar
    value: "spring-petclinic-visits-service/target/visits-service-3.0.1.jar"
  - name: deployFirewallStandard
    value: "false"
  - name: destroyStandard
    value: true
  - name: region
    value: "eastus"
  - name: environment
    value: "dev"
  - name: jumpBoxUsername
    value: "ltzadmin"
  - name: mySQLAdminUsername
    value: "mySqlAdmin"
  - name: azureServiceConnection
    value: "scSub002"
  - group: lza-dev
  - name: workingDirectory
    value: "Scenarios/ASA-Secure-Baseline/Bicep"
  - name: deleteTemplateFile
    value: "empty.bicep"
  - name: ephemeral
    value: false


resources:
  repositories:
    - repository: pet-clinic-microservices
      type: github
      endpoint: bry-devops
      name: bry-devops/spring-petclinic-microservices
      ref: refs/heads/azure

stages:
  - stage: provision_infrastructure
    displayName: "Provision Infrastructure"
    jobs:
      - template: "templates/jobs/job-provision-infra.yml"
        parameters:
          jobName: provision_hub_network
          dependson: []
          ephemeral: ${{variables.ephemeral}}
          serviceConnection: $(azureServiceConnection)
          deploymentName: $(deploymentName)
          location: $(location)
          templateFile: "02-Hub-Network/02-Hub-Network-main.bicep"
          paramFile: "main.parameters.json"
          namePrefix: $(namePrefix)
          servicePrincipalId: $(servicePrincipalId)
          jumpHostPassword: $(jumpHostPassword)
          workingDirectory: "Scenarios/ASA-Secure-Baseline/Bicep"

      - template: "templates/jobs/job-provision-infra.yml"
        parameters:
          jobName: provision_spoke_network
          dependson: [provision_hub_network]
          ephemeral: ${{variables.ephemeral}}
          serviceConnection: $(azureServiceConnection)
          deploymentName: $(deploymentName)
          location: $(location)
          templateFile: "03-LZ-Network/03-LZ-Network-main.bicep"
          paramFile: "main.parameters.json"
          namePrefix: $(namePrefix)
          servicePrincipalId: $(servicePrincipalId)
          jumpHostPassword: $(jumpHostPassword)
          workingDirectory: "Scenarios/ASA-Secure-Baseline/Bicep"

      - template: "templates/jobs/job-provision-infra.yml"
        parameters:
          jobName: provision_sharedresources
          dependson: [provision_spoke_network]
          ephemeral: ${{variables.ephemeral}}
          serviceConnection: $(azureServiceConnection)
          deploymentName: $(deploymentName)
          location: $(location)
          templateFile: "04-LZ-SharedResources/04-LZ-SharedResources-main.bicep"
          paramFile: "main.parameters.json"
          namePrefix: $(namePrefix)
          servicePrincipalId: $(servicePrincipalId)
          jumpHostPassword: $(jumpHostPassword)
          workingDirectory: "Scenarios/ASA-Secure-Baseline/Bicep"

      - template: "templates/jobs/job-provision-infra.yml"
        parameters:
          jobName: provision_hub_firewall
          dependson: [provision_hub_network, provision_sharedresources]
          ephemeral: ${{variables.ephemeral}}
          serviceConnection: $(azureServiceConnection)
          deploymentName: $(deploymentName)
          location: $(location)
          templateFile: "05-Hub-AzureFirewall/05-Hub-AzureFirewall-main.bicep"
          paramFile: "main.parameters.json"
          namePrefix: $(namePrefix)
          servicePrincipalId: $(servicePrincipalId)
          jumpHostPassword: $(jumpHostPassword)
          workingDirectory: "Scenarios/ASA-Secure-Baseline/Bicep"

      - template: "templates/jobs/job-provision-infra.yml"
        parameters:
          jobName: provision_standard_sa
          dependson:
            [
              provision_hub_network,
              provision_sharedresources,
              provision_hub_firewall,
            ]
          ephemeral: ${{variables.ephemeral}}
          serviceConnection: $(azureServiceConnection)
          deploymentName: $(deploymentName)
          location: $(location)
          templateFile: " 06-LZ-SpringApps-Standard/06-LZ-SpringApps-Standard-main.bicep"
          paramFile: "main.parameters.json"
          namePrefix: $(namePrefix)
          servicePrincipalId: $(servicePrincipalId)
          jumpHostPassword: $(jumpHostPassword)
          workingDirectory: "Scenarios/ASA-Secure-Baseline/Bicep"

  - stage: deploy_spring_app
    displayName: "Deploy Petclinic Spring App"
    dependsOn: provision_infrastructure
    jobs:
      - template: templates/jobs/job-spring-app-create.yml
        parameters:
          jobName: "create_apigateway"
          dependson: []
          ignoreError: true
          serviceConnection: $(azureServiceConnection)
          appName: "api-gateway"
          resourceGroupName: rg-${{variables.namePrefix}}-APPS
          springAppServiceName: rg-${{variables.namePrefix}}-apps-instance
          instanceCount: 1
          runtime: "java_17"
          cpu: 1
          memory: 2
          workingDirectory: "Scenarios/ASA-Secure-Baseline/Bicep"
      - template: templates/jobs/job-spring-app-create.yml
        parameters:
          jobName: "create_customers_service"
          dependson: [create_apigateway]
          ignoreError: true
          serviceConnection: $(azureServiceConnection)
          appName: "customers-service"
          resourceGroupName: rg-${{variables.namePrefix}}-APPS
          springAppServiceName: rg-${{variables.namePrefix}}-apps-instance
          instanceCount: 1
          runtime: "java_17"
          cpu: 1
          memory: 2
          workingDirectory: "Scenarios/ASA-Secure-Baseline/Bicep"
      - job: deploy_pre_setup
        displayName: 'Job: Pre Setup to Deploy Pet Clinic Microservices'
        dependsOn: [create_apigateway, create_customers_service]
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - task: AzureCLI@2
            displayName: Install Azure CLI Spring Extension
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptLocation: inlineScript
              scriptType: bash
              inlineScript: |
                set -eu
                az extension add --name spring -y
                az spring list -o table
              addSpnToEnvironment: true
          - task: DownloadPipelineArtifact@2
            displayName: "download build-release artifacts"
            inputs:
              buildType: 'specific'
              project: '890a29bf-c2f0-456a-b797-d55b19415604'
              definition: '32'
              buildVersionToDownload: 'latest'
              artifactName: 'drop'
              targetPath: '$(Pipeline.Workspace)'
              
      - template: templates/jobs/job-spring-app-deploy.yml
        parameters:
          jobName: "deploy_apigateway"
          dependson: [create_apigateway, deploy_pre_setup]
          ignoreError: true
          serviceConnection: $(azureServiceConnection)
          appName: "api-gateway"
          resourceGroupName: rg-${{variables.namePrefix}}-APPS
          springAppServiceName: rg-${{variables.namePrefix}}-apps-instance
          artifactPath: $(Pipeline.Workspace)/$(apiGatewayJar)
      - template: templates/jobs/job-spring-app-deploy.yml
        parameters:
          jobName: "deploy_customers_service"
          dependson: [create_customers_service, deploy_pre_setup]
          ignoreError: true
          serviceConnection: $(azureServiceConnection)
          appName: "customers-service"
          resourceGroupName: rg-${{variables.namePrefix}}-APPS
          springAppServiceName: rg-${{variables.namePrefix}}-apps-instance
          artifactPath: $(Pipeline.Workspace)/$(customersServiceJar)



  - stage: deprovision_infrastructure
    displayName: "Deprovision Infrastrcture"
    dependsOn: deploy_spring_app
    condition: and(succeeded(), eq(variables['ephemeral'], true) )
    jobs:
      - template: templates/jobs/job-echo-infra.yml
        parameters:
          jobName: "destroy_pet_clinic_infra"
          dependson: []
          ephemeral: ${{variables.ephemeral}}
          serviceConnection: $(azureServiceConnection)
          resourceGroupName: ""
          templateFile: ""
          workingDirectory: "Scenarios/ASA-Secure-Baseline/Bicep"

      - template: templates/jobs/job-destroy-infra.yml
        parameters:
          jobName: "destroy_spring_apps_standard"
          dependson: [destroy_pet_clinic_infra]
          ephemeral: ${{variables.ephemeral}}
          serviceConnection: $(azureServiceConnection)
          resourceGroupName: "rg-$(namePrefix)-APPS"
          templateFile: "empty.bicep"
          workingDirectory: "Scenarios/ASA-Secure-Baseline/Bicep"

      - template: templates/jobs/job-destroy-infra.yml
        parameters:
          jobName: "destroy_hub_firewall"
          dependson: [destroy_spring_apps_standard]
          ephemeral: ${{variables.ephemeral}}
          serviceConnection: $(azureServiceConnection)
          resourceGroupName: "rg-$(namePrefix)-HUB"
          templateFile: "empty.bicep"
          workingDirectory: "Scenarios/ASA-Secure-Baseline/Bicep"

      - template: templates/jobs/job-destroy-infra.yml
        parameters:
          jobName: "destroy_shared_resources"
          dependson: []
          ephemeral: ${{variables.ephemeral}}
          serviceConnection: $(azureServiceConnection)
          resourceGroupName: "rg-$(namePrefix)-SHARED"
          templateFile: "empty.bicep"
          workingDirectory: "Scenarios/ASA-Secure-Baseline/Bicep"

      - template: templates/jobs/job-destroy-infra.yml
        parameters:
          jobName: "destroy_spoke_network"
          dependson: [destroy_shared_resources]
          ephemeral: ${{variables.ephemeral}}
          serviceConnection: $(azureServiceConnection)
          resourceGroupName: "rg-$(namePrefix)-SPOKE"
          templateFile: "empty.bicep"
          workingDirectory: "Scenarios/ASA-Secure-Baseline/Bicep"

      - template: templates/jobs/job-destroy-infra.yml
        parameters:
          jobName: "destroy_hub_network"
          dependson: [destroy_spoke_network]
          ephemeral: ${{variables.ephemeral}}
          serviceConnection: $(azureServiceConnection)
          resourceGroupName: "rg-$(namePrefix)-HUB"
          templateFile: "empty.bicep"
          workingDirectory: "Scenarios/ASA-Secure-Baseline/Bicep"
